apply plugin: 'war'
apply plugin: 'eclipse'

// Properties
group = 'com.v3'
version = '0.1.0-SNAPSHOT'

ext{
}

// Deploy - Does a full deploy including deleting the old war and directory and copying in a new war. Must restart Tomcat.
task deploy(dependsOn:'build') << {
	println "Deleting deployed artifact ${project.name}.war and directory ${project.name} from ${tomcatDir}\\webapps"
	delete "${tomcatDir}/webapps/${project.name}.war"
	delete "${tomcatDir}/webapps/${project.name}"

	println "Deploying ${tomcatDir}/webapps/${project.name}.war"
	copy {
		from war.archivePath
		into "${tomcatDir}/webapps"
		rename { "${project.name}.war" }
	}
}

// DeployStatic - Deploys only the static resources (css, js, images, jsp, etc) no Tomcat restart required. 
task deployStatic(dependsOn: 'processResources')<< {
	println "Deploying static content to ${tomcatDir}/webapps/${project.name}/resources"

	["resources","WEB-INF/views","WEB-INF/tags"].each{ dir ->
		copy {
			from '/src/main/webapp/' + dir
			into "${tomcatDir}/webapps/${project.name}/" + dir
		}
	}
}

war {
	from '/src/main/resources'
}

configurations {
	all*.exclude group: 'commons-logging', module: 'commons-logging'
	all*.exclude group: 'javax.mail', module: 'mail'
	all*.exclude group: 'javax.jms', module: 'jms'
	all*.exclude group: 'com.sun.jdmk', module: 'jmxtools'
	all*.exclude group: 'com.sun.jmx', module: 'jmxri'
}

dependencies {
	// Spring
	compile "org.springframework:spring-context:3.2.0.RELEASE"
	compile "org.springframework:spring-webmvc:3.2.0.RELEASE"
	compile "org.springframework.security:spring-security-core:3.1.3.RELEASE"
	compile "org.springframework.security:spring-security-web:3.1.3.RELEASE"
	compile "org.springframework.security:spring-security-config:3.1.3.RELEASE"
	compile 'org.springframework.data:spring-data-jpa:1.1.0.RELEASE'

	// Servlet
	compile  'javax.servlet:servlet-api:2.5'
	compile  'javax.servlet.jsp:jsp-api:2.2'
	compile  'javax.servlet:jstl:1.2'

	// Guava
	compile 'com.google.guava:guava:12.0'
	
	// Joda Time
	compile 'joda-time:joda-time:2.1'

	// Imagescalr
	compile 'org.imgscalr:imgscalr-lib:4.2'

	// Apache Commons
	runtime 'commons-fileupload:commons-fileupload:1.2.2'
	compile 'commons-io:commons-io:2.4'

	// Jackson
	compile 'org.codehaus.jackson:jackson-core-asl:1.9.3'
	compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.3'
	
	// HSQL Embedded DB
	runtime 'hsqldb:hsqldb:1.8.0.10'

	// Logging SLF4J
	compile 'org.slf4j:slf4j-api:1.6.6'
	compile 'org.slf4j:jcl-over-slf4j:1.6.6'
	compile 'org.slf4j:slf4j-log4j12:1.6.6'
	compile 'log4j:log4j:1.2.15'
	
	// Test
	testCompile 'junit:junit:4.7'
}

repositories {
	mavenCentral()
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.3'
}